# -*- coding: utf-8 -*-
"""stock_prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ma0vO0BbkyvijbDB1QziZf36ONDg0Hyx
"""


st.set_page_config(page_title="Stock Price Prediction", layout="centered")

st.title(" Simple Stock Trend Predictor")
st.write("Welcome! This app predicts whether a stock's price will go UP  or DOWN  tomorrow.")

stock_symbol = st.text_input("Enter Stock Symbol (e.g., AAPL, MSFT, INFY):", value="AAPL")

if st.button("Predict"):
    try:
        data = yf.download(stock_symbol, start='2022-01-01', end='2023-12-31')
        if data.empty:
            st.error("No data found for this symbol. Please try a different one.")
        else:

            data['Target'] = (data['Close'].shift(-1) > data['Close']).astype(int)


            features = data[['Open', 'High', 'Low', 'Volume']].dropna()
            target = data['Target'].dropna()
            features = features.iloc[:-1]
            target = target.iloc[:-1]


            X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)


            model = LogisticRegression()
            model.fit(X_train, y_train)


            predictions = model.predict(X_test)
            accuracy = accuracy_score(y_test, predictions)
            st.success(f" Model Accuracy: {accuracy:.2f}")


            latest_data = features.iloc[[-1]]
            prediction = model.predict(latest_data)[0]

            if prediction == 1:
                st.markdown("###  Prediction: The stock price will likely go ** UP** tomorrow.")
            else:
                st.markdown("###  Prediction: The stock price will likely go ** DOWN** tomorrow.")
    except Exception as e:
        st.error(f"An error occurred: {str(e)}")

